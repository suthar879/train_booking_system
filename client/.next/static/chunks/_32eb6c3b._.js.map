{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/LetsLearn/train-booking-app/client/src/lib/get-current-user.ts"],"sourcesContent":["import { jwtDecode } from \"jwt-decode\";\r\n\r\ntype DecodedToken = {\r\n  userId: string;\r\n  iat: number;\r\n  exp: number;\r\n};\r\n\r\nexport function getCurrentUser() {\r\n  if (typeof window === \"undefined\") return null;\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) return null;\r\n\r\n  try {\r\n    const decoded = jwtDecode(token) as DecodedToken;\r\n    return decoded;\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAQO,SAAS;IACd,uCAAmC;;IAAW;IAC9C,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,IAAI,CAAC,OAAO,OAAO;IAEnB,IAAI;QACF,MAAM,UAAU,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAD,EAAE;QAC1B,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file://D%3A/LetsLearn/train-booking-app/client/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { getCurrentUser } from \"@/lib/get-current-user\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nexport default function DashboardPage() {\r\n  const router = useRouter();\r\n  const [user, setUser] = useState<{ userId: string } | null>(null);\r\n\r\n  useEffect(() => {\r\n    const decoded = getCurrentUser();\r\n    if (!decoded) {\r\n      router.push(\"/login\");\r\n    } else {\r\n      setUser(decoded);\r\n    }\r\n  }, [router]);\r\n\r\n  return (\r\n    <div className=\"min-h-[80vh] flex items-center justify-center\">\r\n      {user ? (\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-3xl font-bold\">Welcome to your dashboard</h1>\r\n          <p className=\"text-muted-foreground mt-2\">User ID: {user.userId}</p>\r\n          <SeatGrid />\r\n        </div>\r\n      ) : (\r\n        <p className=\"text-center\">Checking authentication...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA6B;IAE5D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,iBAAc,AAAD;YAC7B,IAAI,CAAC,SAAS;gBACZ,OAAO,IAAI,CAAC;YACd,OAAO;gBACL,QAAQ;YACV;QACF;kCAAG;QAAC;KAAO;IAEX,qBACE,6LAAC;QAAI,WAAU;kBACZ,qBACC,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAqB;;;;;;8BACnC,6LAAC;oBAAE,WAAU;;wBAA6B;wBAAU,KAAK,MAAM;;;;;;;8BAC/D,6LAAC;;;;;;;;;;iCAGH,6LAAC;YAAE,WAAU;sBAAc;;;;;;;;;;;AAInC;GA1BwB;;QACP,qIAAA,CAAA,YAAS;;;KADF","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file://D%3A/LetsLearn/train-booking-app/client/node_modules/jwt-decode/build/esm/index.js"],"sourcesContent":["export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n"],"names":[],"mappings":";;;;AAAO,MAAM,0BAA0B;AACvC;AACA,kBAAkB,SAAS,CAAC,IAAI,GAAG;AACnC,SAAS,iBAAiB,GAAG;IACzB,OAAO,mBAAmB,KAAK,KAAK,OAAO,CAAC,QAAQ,CAAC,GAAG;QACpD,IAAI,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,IAAI,WAAW;QACnD,IAAI,KAAK,MAAM,GAAG,GAAG;YACjB,OAAO,MAAM;QACjB;QACA,OAAO,MAAM;IACjB;AACJ;AACA,SAAS,gBAAgB,GAAG;IACxB,IAAI,SAAS,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM;IAClD,OAAQ,OAAO,MAAM,GAAG;QACpB,KAAK;YACD;QACJ,KAAK;YACD,UAAU;YACV;QACJ,KAAK;YACD,UAAU;YACV;QACJ;YACI,MAAM,IAAI,MAAM;IACxB;IACA,IAAI;QACA,OAAO,iBAAiB;IAC5B,EACA,OAAO,KAAK;QACR,OAAO,KAAK;IAChB;AACJ;AACO,SAAS,UAAU,KAAK,EAAE,OAAO;IACpC,IAAI,OAAO,UAAU,UAAU;QAC3B,MAAM,IAAI,kBAAkB;IAChC;IACA,WAAW,CAAC,UAAU,CAAC,CAAC;IACxB,MAAM,MAAM,QAAQ,MAAM,KAAK,OAAO,IAAI;IAC1C,MAAM,OAAO,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI;IAClC,IAAI,OAAO,SAAS,UAAU;QAC1B,MAAM,IAAI,kBAAkB,CAAC,uCAAuC,EAAE,MAAM,GAAG;IACnF;IACA,IAAI;IACJ,IAAI;QACA,UAAU,gBAAgB;IAC9B,EACA,OAAO,GAAG;QACN,MAAM,IAAI,kBAAkB,CAAC,kDAAkD,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;IAC7G;IACA,IAAI;QACA,OAAO,KAAK,KAAK,CAAC;IACtB,EACA,OAAO,GAAG;QACN,MAAM,IAAI,kBAAkB,CAAC,gDAAgD,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;IAC3G;AACJ","ignoreList":[0],"debugId":null}}]
}