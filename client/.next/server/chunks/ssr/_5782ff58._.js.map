{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/LetsLearn/train-booking-app/client/src/lib/get-current-user.ts"],"sourcesContent":["import { jwtDecode } from \"jwt-decode\";\r\n\r\ntype DecodedToken = {\r\n  userId: string;\r\n  iat: number;\r\n  exp: number;\r\n};\r\n\r\nexport function getCurrentUser() {\r\n  if (typeof window === \"undefined\") return null;\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) return null;\r\n\r\n  try {\r\n    const decoded = jwtDecode(token) as DecodedToken;\r\n    return decoded;\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAQO,SAAS;IACd,wCAAmC,OAAO;;IAC1C,MAAM;AASR","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://D%3A/LetsLearn/train-booking-app/client/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file://D%3A/LetsLearn/train-booking-app/client/src/components/SeatGrid.tsx"],"sourcesContent":["// src/components/SeatGrid.tsx\r\n'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { cn } from '@/lib/utils';\r\nimport { toast } from 'sonner';\r\n\r\nconst MAX_SELECTION = 7;\r\nconst TOTAL_SEATS = 80;\r\n\r\nexport default function SeatGrid() {\r\n  const [seatCount, setSeatCount] = useState<number>(1);\r\n  const [bookedSeats, setBookedSeats] = useState<number[]>([12, 13, 14, 50]); // Mocked reserved seats\r\n  const [userSeats, setUserSeats] = useState<number[]>([]);\r\n\r\n  const handleBooking = () => {\r\n    if (seatCount < 1 || seatCount > MAX_SELECTION) {\r\n      toast.error('You can book between 1 and 7 seats.');\r\n      return;\r\n    }\r\n\r\n    const availableSeats = Array.from({ length: TOTAL_SEATS }, (_, i) => i + 1).filter(\r\n      (n) => !bookedSeats.includes(n)\r\n    );\r\n\r\n    const assigned = findBestSeats(availableSeats, seatCount);\r\n\r\n    if (assigned.length < seatCount) {\r\n      toast.error('Not enough adjacent seats available');\r\n      return;\r\n    }\r\n\r\n    setBookedSeats((prev) => [...prev, ...assigned]);\r\n    setUserSeats(assigned);\r\n    toast.success(`Booked seats: ${assigned.join(', ')}`);\r\n  };\r\n\r\n  const findBestSeats = (available: number[], count: number): number[] => {\r\n    const rows: number[][] = [];\r\n    let index = 0;\r\n\r\n    for (let row = 1; row <= 11; row++) {\r\n      const rowSeats = [];\r\n      for (let i = 0; i < 7; i++) rowSeats.push(index++ + 1);\r\n      rows.push(rowSeats);\r\n    }\r\n\r\n    rows.push([78, 79, 80]); // Last row with 3 seats\r\n\r\n    // Try to find in one row\r\n    for (const row of rows) {\r\n      const candidates = row.filter((n) => available.includes(n));\r\n      if (candidates.length >= count) {\r\n        return candidates.slice(0, count);\r\n      }\r\n    }\r\n\r\n    // Fallback: pick closest available (not necessarily same row)\r\n    return available.slice(0, count);\r\n  };\r\n\r\n  const renderSeats = () => {\r\n    const seats: JSX.Element[] = [];\r\n    let seatNumber = 1;\r\n\r\n    for (let row = 1; row <= 12; row++) {\r\n      const seatsInRow = row === 12 ? 3 : 7;\r\n      const rowSeats = [];\r\n\r\n      for (let i = 0; i < seatsInRow; i++) {\r\n        const isBooked = bookedSeats.includes(seatNumber);\r\n        const isUser = userSeats.includes(seatNumber);\r\n\r\n        rowSeats.push(\r\n          <div\r\n            key={seatNumber}\r\n            className={cn(\r\n              'w-10 h-10 rounded text-sm flex items-center justify-center border shadow',\r\n              isBooked\r\n                ? isUser\r\n                  ? 'bg-green-500 text-white'\r\n                  : 'bg-gray-400 text-white'\r\n                : 'bg-white'\r\n            )}\r\n          >\r\n            {seatNumber}\r\n          </div>\r\n        );\r\n\r\n        seatNumber++;\r\n      }\r\n\r\n      seats.push(\r\n        <div key={row} className=\"flex gap-2 mb-3 justify-center\">\r\n          {rowSeats}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return seats;\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-6 max-w-xl mx-auto text-center\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Book Your Train Seats</h2>\r\n\r\n      <div className=\"flex items-center justify-center gap-4 mb-4\">\r\n        <Input\r\n          type=\"number\"\r\n          min={1}\r\n          max={7}\r\n          value={seatCount}\r\n          onChange={(e) => setSeatCount(Number(e.target.value))}\r\n          className=\"w-24\"\r\n        />\r\n        <Button onClick={handleBooking}>Book Seats</Button>\r\n      </div>\r\n\r\n      {renderSeats()}\r\n\r\n      {userSeats.length > 0 && (\r\n        <p className=\"mt-4 text-muted-foreground text-sm\">\r\n          âœ… You booked: <span className=\"font-medium\">{userSeats.join(', ')}</span>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file://D%3A/LetsLearn/train-booking-app/client/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { getCurrentUser } from \"@/lib/get-current-user\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport SeatGrid from \"@/components/SeatGrid\";\r\n\r\nexport default function DashboardPage() {\r\n  const router = useRouter();\r\n  const [user, setUser] = useState<{ userId: string } | null>(null);\r\n\r\n  useEffect(() => {\r\n    const decoded = getCurrentUser();\r\n    if (!decoded) {\r\n      router.push(\"/login\");\r\n    } else {\r\n      setUser(decoded);\r\n    }\r\n  }, [router]);\r\n\r\n  return (\r\n    <div className=\"min-h-[80vh] flex items-center justify-center\">\r\n      {user ? (\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-3xl font-bold\">Welcome to your dashboard</h1>\r\n          <p className=\"text-muted-foreground mt-2\">User ID: {user.userId}</p>\r\n          <SeatGrid />\r\n        </div>\r\n      ) : (\r\n        <p className=\"text-center\">Checking authentication...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA6B;IAE5D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,UAAU,CAAA,GAAA,oIAAA,CAAA,iBAAc,AAAD;QAC7B,IAAI,CAAC,SAAS;YACZ,OAAO,IAAI,CAAC;QACd,OAAO;YACL,QAAQ;QACV;IACF,GAAG;QAAC;KAAO;IAEX,qBACE,8OAAC;QAAI,WAAU;kBACZ,qBACC,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAqB;;;;;;8BACnC,8OAAC;oBAAE,WAAU;;wBAA6B;wBAAU,KAAK,MAAM;;;;;;;8BAC/D,8OAAC,8HAAA,CAAA,UAAQ;;;;;;;;;;iCAGX,8OAAC;YAAE,WAAU;sBAAc;;;;;;;;;;;AAInC","debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file://D%3A/LetsLearn/train-booking-app/client/node_modules/jwt-decode/build/esm/index.js"],"sourcesContent":["export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n"],"names":[],"mappings":";;;;AAAO,MAAM,0BAA0B;AACvC;AACA,kBAAkB,SAAS,CAAC,IAAI,GAAG;AACnC,SAAS,iBAAiB,GAAG;IACzB,OAAO,mBAAmB,KAAK,KAAK,OAAO,CAAC,QAAQ,CAAC,GAAG;QACpD,IAAI,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,IAAI,WAAW;QACnD,IAAI,KAAK,MAAM,GAAG,GAAG;YACjB,OAAO,MAAM;QACjB;QACA,OAAO,MAAM;IACjB;AACJ;AACA,SAAS,gBAAgB,GAAG;IACxB,IAAI,SAAS,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM;IAClD,OAAQ,OAAO,MAAM,GAAG;QACpB,KAAK;YACD;QACJ,KAAK;YACD,UAAU;YACV;QACJ,KAAK;YACD,UAAU;YACV;QACJ;YACI,MAAM,IAAI,MAAM;IACxB;IACA,IAAI;QACA,OAAO,iBAAiB;IAC5B,EACA,OAAO,KAAK;QACR,OAAO,KAAK;IAChB;AACJ;AACO,SAAS,UAAU,KAAK,EAAE,OAAO;IACpC,IAAI,OAAO,UAAU,UAAU;QAC3B,MAAM,IAAI,kBAAkB;IAChC;IACA,WAAW,CAAC,UAAU,CAAC,CAAC;IACxB,MAAM,MAAM,QAAQ,MAAM,KAAK,OAAO,IAAI;IAC1C,MAAM,OAAO,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI;IAClC,IAAI,OAAO,SAAS,UAAU;QAC1B,MAAM,IAAI,kBAAkB,CAAC,uCAAuC,EAAE,MAAM,GAAG;IACnF;IACA,IAAI;IACJ,IAAI;QACA,UAAU,gBAAgB;IAC9B,EACA,OAAO,GAAG;QACN,MAAM,IAAI,kBAAkB,CAAC,kDAAkD,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;IAC7G;IACA,IAAI;QACA,OAAO,KAAK,KAAK,CAAC;IACtB,EACA,OAAO,GAAG;QACN,MAAM,IAAI,kBAAkB,CAAC,gDAAgD,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;IAC3G;AACJ","ignoreList":[0],"debugId":null}}]
}